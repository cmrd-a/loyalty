# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import loyalty_pb2 as loyalty__pb2


class PromoCodeStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateV1 = channel.unary_unary(
                '/loyalty.PromoCode/CreateV1',
                request_serializer=loyalty__pb2.CreatePromoCodeRequestV1.SerializeToString,
                response_deserializer=loyalty__pb2.CommonResponse.FromString,
                )
        self.ReserveV1 = channel.unary_unary(
                '/loyalty.PromoCode/ReserveV1',
                request_serializer=loyalty__pb2.CommonPromoCodeRequestV1.SerializeToString,
                response_deserializer=loyalty__pb2.CommonResponse.FromString,
                )
        self.FreeV1 = channel.unary_unary(
                '/loyalty.PromoCode/FreeV1',
                request_serializer=loyalty__pb2.CommonPromoCodeRequestV1.SerializeToString,
                response_deserializer=loyalty__pb2.CommonResponse.FromString,
                )
        self.ApplyV1 = channel.unary_unary(
                '/loyalty.PromoCode/ApplyV1',
                request_serializer=loyalty__pb2.CommonPromoCodeRequestV1.SerializeToString,
                response_deserializer=loyalty__pb2.CommonResponse.FromString,
                )


class PromoCodeServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateV1(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReserveV1(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FreeV1(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ApplyV1(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PromoCodeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateV1': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateV1,
                    request_deserializer=loyalty__pb2.CreatePromoCodeRequestV1.FromString,
                    response_serializer=loyalty__pb2.CommonResponse.SerializeToString,
            ),
            'ReserveV1': grpc.unary_unary_rpc_method_handler(
                    servicer.ReserveV1,
                    request_deserializer=loyalty__pb2.CommonPromoCodeRequestV1.FromString,
                    response_serializer=loyalty__pb2.CommonResponse.SerializeToString,
            ),
            'FreeV1': grpc.unary_unary_rpc_method_handler(
                    servicer.FreeV1,
                    request_deserializer=loyalty__pb2.CommonPromoCodeRequestV1.FromString,
                    response_serializer=loyalty__pb2.CommonResponse.SerializeToString,
            ),
            'ApplyV1': grpc.unary_unary_rpc_method_handler(
                    servicer.ApplyV1,
                    request_deserializer=loyalty__pb2.CommonPromoCodeRequestV1.FromString,
                    response_serializer=loyalty__pb2.CommonResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'loyalty.PromoCode', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PromoCode(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateV1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/loyalty.PromoCode/CreateV1',
            loyalty__pb2.CreatePromoCodeRequestV1.SerializeToString,
            loyalty__pb2.CommonResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReserveV1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/loyalty.PromoCode/ReserveV1',
            loyalty__pb2.CommonPromoCodeRequestV1.SerializeToString,
            loyalty__pb2.CommonResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FreeV1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/loyalty.PromoCode/FreeV1',
            loyalty__pb2.CommonPromoCodeRequestV1.SerializeToString,
            loyalty__pb2.CommonResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ApplyV1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/loyalty.PromoCode/ApplyV1',
            loyalty__pb2.CommonPromoCodeRequestV1.SerializeToString,
            loyalty__pb2.CommonResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class DiscountStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateV1 = channel.unary_unary(
                '/loyalty.Discount/CreateV1',
                request_serializer=loyalty__pb2.CreateDiscountRequestV1.SerializeToString,
                response_deserializer=loyalty__pb2.CommonResponse.FromString,
                )
        self.GetV1 = channel.unary_unary(
                '/loyalty.Discount/GetV1',
                request_serializer=loyalty__pb2.GetDiscountRequestV1.SerializeToString,
                response_deserializer=loyalty__pb2.GetDiscountResponseV1.FromString,
                )


class DiscountServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateV1(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetV1(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DiscountServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateV1': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateV1,
                    request_deserializer=loyalty__pb2.CreateDiscountRequestV1.FromString,
                    response_serializer=loyalty__pb2.CommonResponse.SerializeToString,
            ),
            'GetV1': grpc.unary_unary_rpc_method_handler(
                    servicer.GetV1,
                    request_deserializer=loyalty__pb2.GetDiscountRequestV1.FromString,
                    response_serializer=loyalty__pb2.GetDiscountResponseV1.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'loyalty.Discount', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Discount(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateV1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/loyalty.Discount/CreateV1',
            loyalty__pb2.CreateDiscountRequestV1.SerializeToString,
            loyalty__pb2.CommonResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetV1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/loyalty.Discount/GetV1',
            loyalty__pb2.GetDiscountRequestV1.SerializeToString,
            loyalty__pb2.GetDiscountResponseV1.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
